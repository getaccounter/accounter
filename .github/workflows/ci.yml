name: CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  health-checks:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: pull dependency images
        run: docker-compose pull
      - name: build
        run: docker-compose build
      - name: linting server
        run: docker-compose run --no-deps server pylint accounter
      - name: linting web
        run: docker-compose run --no-deps web npm run lint
      - name: typechecking web
        run: docker-compose run --no-deps web npm run typecheck
      - name: unit tests web
        run: docker-compose run --no-deps web npm t -- --coverage
      - name: report coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: web
          fail_ci_if_error: true
      - name: end-to-end tests production build
        run: docker-compose -f docker-compose.yml -f docker-compose.production.yml up --no-deps --build --exit-code-from e2e web e2e

      - name: Login to GitHub Package Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}

      - name: Push image to GitHub Container Registry
        if: github.ref == 'refs/heads/master'
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/web
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag web.production $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
