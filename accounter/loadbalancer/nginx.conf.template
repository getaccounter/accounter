
events {}

http {
    server {
        listen ${PORT} default;
        listen [::]:${PORT};

        location / {
            if ($request_uri ~* /static/) {
                set $staticfiles_fromdjango "true";
            }

            if ($request_uri ~* /media/) {
                set $staticfiles_fromdjango "true";
            }

            if ($http_referer ~* /api/) {
                set $staticfiles_fromdjango "${staticfiles_fromdjango}-true";
            }

            if ($http_referer ~* /admin/) {
                set $staticfiles_fromdjango "${staticfiles_fromdjango}-true";
            }

            if ($staticfiles_fromdjango = "true-true") {
                # This needs to be in place, because django static requests do not request /api/static but only /static
                return 301 /api$request_uri;
            }

            proxy_pass http://${WEB_HOST}:${WEB_PORT};
        }

        location /sockjs-node {
            # The dev hot reloading, should be removed in production eventually
            proxy_pass http://${WEB_HOST}:${WEB_PORT}/sockjs-node;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /admin/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;
            proxy_pass http://${SERVER_HOST}:${SERVER_PORT}/admin/;
        }

        location /media/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;
            proxy_pass http://${SERVER_HOST}:${SERVER_PORT}/media/;
        }   

        location /api/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;
            proxy_pass http://${SERVER_HOST}:${SERVER_PORT}/;
        }   

        location /s3/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;
            proxy_pass ${S3_HOST}/${S3_BUCKET}/;
        }   
    }
}